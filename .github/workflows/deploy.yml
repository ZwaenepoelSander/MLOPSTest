# This is a basic workflow to help you get started with Actions

name: Deploy to Kubernetis

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "01_DockerTest" branch
  push:
    branches: [ "01_DockerTest" ]
  pull_request:
    branches: [ "01_DockerTest" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Image
        run: |
          docker build -t ghcr.io/${{ github.actor }}/my-app:${{ github.sha }} .
          docker push ghcr.io/${{ github.actor }}/my-app:${{ github.sha }}

      - name: Update Kubernetes Manifests
        run: |
          # Update the YAML file with the new image tag.
          # Using yq (optional) if installed:
          # yq e ".spec.template.spec.containers[0].image = \"ghcr.io/${{ github.actor }}/my-app:${{ github.sha }}\"" -i k8s/deployment.yaml

          # If yq is not available, use sed:
          sed -i "s|ghcr.io/${{ github.actor }}/my-app:.*|ghcr.io/${{ github.actor }}/my-app:${{ github.sha }}|g" k8s/deployment.yaml

      - name: Apply Kubernetes changes
        run: |
          kubectl apply -f k8s/namespace.yaml || true
          kubectl apply -f k8s/deployment.yaml
          kubectl rollout status deployment/my-app-deployment -n my-namespace
